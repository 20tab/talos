version: "3.4"

services:

  backend:
    build:
      context: ./backend
      target: dev
    container_name: {{cookiecutter.project_slug}}_backend
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - DJANGO_ADMINS=${DJANGO_ADMINS}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CONFIGURATION=${DJANGO_CONFIGURATION}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_DEFAULT_FROM_EMAIL=${DJANGO_DEFAULT_FROM_EMAIL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SERVER_EMAIL=${DJANGO_SERVER_EMAIL}
      - EMAIL_URL=${EMAIL_URL}
    volumes:
      - ./backend:/app
      - ~/.ssh:/root/.ssh-localhost:ro{% if cookiecutter.use_media_volume == "Yes" %}
      - media:/app/media{% endif %}

  frontend:
    build:
      context: ./frontend
      dockerfile: docker/dev.Dockerfile
    container_name: {{cookiecutter.project_slug}}_frontend
    depends_on:
      - backend
    environment:
      - NODE_ENV=${NODE_ENV}
      - DJANGO_CONFIGURATION=${DJANGO_CONFIGURATION}
      - BASIC_AUTH_USER=${BASIC_AUTH_USER}
      - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD}
    volumes:
      - ./frontend:/app
      - /app/node_modules/

  nginx:
    build: ./nginx
    container_name: {{cookiecutter.project_slug}}_nginx
    depends_on:
      - backend
      - frontend
    ports:
      - ${LOCAL_HTTP_PORT}:80
      - ${LOCAL_HTTPS_PORT}:443

  postgres:
    container_name: {{cookiecutter.project_slug}}_postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    image: postgres:12
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:{% if cookiecutter.use_media_volume == "Yes" %}
  media: {}{% endif %}
  pg_data: {}
