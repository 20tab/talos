version: "3.4"
{% set frontends = ["React", "React (TypeScript)"] %}
services:

  backend:
    build:
      args:
        USER: ${USER}
      context: ./backend
      target: local
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DJANGO_ADMINS=${DJANGO_ADMINS}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CONFIGURATION=${DJANGO_CONFIGURATION}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_DEFAULT_FROM_EMAIL=${DJANGO_DEFAULT_FROM_EMAIL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SERVER_EMAIL=${DJANGO_SERVER_EMAIL}
      - EMAIL_URL=${EMAIL_URL}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    user: ${USER}
    volumes:
      - ./backend:/app{% if cookiecutter.use_media == "Yes" %}
      - media:/app/media{% endif %}
{% if cookiecutter.which_frontend in frontends %}
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/dev.Dockerfile
    depends_on:
      - backend
    environment:
      - INTERNAL_API_URL=${INTERNAL_API_URL}
      - NEXT_PUBLIC_API_URL=${API_URL}
      - NODE_ENV=${NODE_ENV}
      - REACT_ENVIRONMENT=${DJANGO_CONFIGURATION}
    volumes:
      - ./frontend:/app
      - /app/node_modules/{% endif %}

  nginx:
    build: ./nginx
    depends_on:
      - backend{% if cookiecutter.which_frontend in frontends %}
      - frontend{% endif %}
    ports:
      - ${LOCAL_HTTP_PORT:-8080}:80
      - ${LOCAL_HTTPS_PORT:-8443}:443

  postgres:
    environment:
      - POSTGRES_DB={{cookiecutter.project_slug}}
      - POSTGRES_INITDB_ARGS=--no-sync
      - POSTGRES_PASSWORD=postgres
    image: postgres:12
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:{% if cookiecutter.use_media == "Yes" %}
  media: {}{% endif %}
  pg_data: {}
