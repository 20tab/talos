version: "3.4"
{% set frontends = ["React"] %}
services:

  backend:
    build:
      args:
        USER: ${USER:-appuser}
      context: ./backend
      target: ${BACKEND_BUILD_TARGET:-local}
    depends_on:
      - postgres
    environment:
      - CACHE_URL
      - DATABASE_URL
      - DJANGO_ADMINS
      - DJANGO_ALLOWED_HOSTS
      - DJANGO_CONFIGURATION
      - DJANGO_CSRF_TRUSTED_ORIGINS
      - DJANGO_DEBUG
      - DJANGO_DEFAULT_FROM_EMAIL
      - DJANGO_SECRET_KEY
      - DJANGO_SERVER_EMAIL
      - DJANGO_SESSION_COOKIE_DOMAIN
      - DJANGO_SUPERUSER_EMAIL
      - DJANGO_SUPERUSER_PASSWORD
      - DJANGO_SUPERUSER_USERNAME
      - EMAIL_URL
      - PYTHONBREAKPOINT
    user: ${USER:-appuser}
    volumes:
      - ./backend:/app
{% if cookiecutter.which_frontend in frontends %}
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/local.Dockerfile
    depends_on:
      - backend
    environment:
      - INTERNAL_API_URL
      - NEXT_PUBLIC_API_URL=${API_URL}
      - NODE_ENV
      - REACT_ENVIRONMENT=${DJANGO_CONFIGURATION}
    volumes:
      - ./frontend:/app{% endif %}

  nginx:
    build: ./nginx
    depends_on:
      - backend{% if cookiecutter.which_frontend in frontends %}
      - frontend{% endif %}
    ports:
      - ${LOCAL_HTTP_PORT:-8080}:80
      - ${LOCAL_HTTPS_PORT:-8443}:443

  postgres:
    environment:
      - POSTGRES_DB={{cookiecutter.project_slug}}
      - POSTGRES_INITDB_ARGS=--no-sync
      - POSTGRES_PASSWORD=postgres
    image: postgres:13-buster
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data: {}
