version: "3.4"

services:
  postgres:
    container_name: postgres
    image: postgres:12
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    container_name: backend
    build:
      context: ./backend
      target: dev
    volumes:
      - ./backend:/app
      - static:/app/static
      - media:/app/media
      - ~/.ssh:/root/.ssh-localhost:ro
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - DJANGO_ADMINS=${DJANGO_ADMINS}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SERVER_EMAIL=${DJANGO_SERVER_EMAIL}
      - DJANGO_CONFIGURATION=${DJANGO_CONFIGURATION}
      - EMAIL_URL=${EMAIL_URL}

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: docker/dev.Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules/
    depends_on:
      - backend

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 8080:80
      - 8443:443
    volumes:
      - static:/static
      - media:/media
    depends_on:
      - backend
      - frontend

volumes:
  pg_data: {}
  static: {}
  media: {}
