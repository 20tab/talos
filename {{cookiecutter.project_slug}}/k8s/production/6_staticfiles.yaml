apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-static-config-map
  namespace: {{cookiecutter.project_slug}}-production
data:
  nginx.conf: |
    worker_processes        1;

    events {
      worker_connections  512;
    }

    http {
      include    mime.types;

      server {
        location / {
          root /app/static/;
          rewrite ^/([^/]+)(.*)$ $2 break;
        }
      }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: static-nginx-deployment
  namespace: {{cookiecutter.project_slug}}-production
spec:
  replicas: 1
  selector:
    matchLabels:
      component: production-{{cookiecutter.project_slug}}-static-nginx
  template:
    metadata:
      labels:
        component: production-{{cookiecutter.project_slug}}-static-nginx
    spec:
      volumes:
        - name: production-{{cookiecutter.project_slug}}-nginx-config
          configMap:
            name: production-{{cookiecutter.project_slug}}-nginx-static-config-map
        - name: production-{{cookiecutter.project_slug}}-static-volume
          persistentVolumeClaim:
            claimName: production-{{cookiecutter.project_slug}}-static-persistent-volume-claim
      containers:
        - name: nginx-static-files
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - name: production-{{cookiecutter.project_slug}}-nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: production-{{cookiecutter.project_slug}}-static-volume
              mountPath: /app/static
              subPath: static

---

apiVersion: v1
kind: Service
metadata:
  name: static-nginx-cluster-ip-service
  namespace: {{cookiecutter.project_slug}}-production
spec:
  type: ClusterIP
  selector:
    component: production-{{cookiecutter.project_slug}}-static-nginx
  ports:
    - port: 80
      targetPort: 80
