version: "3.4"

services:
{% if cookiecutter.backend_type != "none" %}
  {{ cookiecutter.backend_service_slug }}:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{ cookiecutter.backend_service_slug }}-ssl.entryPoints=port443"
      - "traefik.http.routers.{{ cookiecutter.backend_service_slug }}-ssl.rule=Host(`${HOST:-localhost}`) && PathPrefix(`/admin`) || Host(`${HOST:-localhost}`) && PathPrefix(`/api`) || Host(`${HOST:-localhost}`) && PathPrefix(`/static`) || Host(`${HOST:-localhost}`) && PathPrefix(`/__debug__`)"
      - "traefik.http.routers.{{ cookiecutter.backend_service_slug }}-ssl.tls=true"
      - "traefik.http.routers.{{ cookiecutter.backend_service_slug }}-ssl.service={{ cookiecutter.backend_service_slug }}-ssl"
      - "traefik.http.services.{{ cookiecutter.backend_service_slug }}-ssl.loadBalancer.server.port=${BACKEND_PORT:-8000}"
    build:
      args:
        USER: ${USER:-appuser}
      context: ./{{ cookiecutter.backend_service_slug }}
      target: ${BACKEND_BUILD_TARGET:-local}
    depends_on:
      - postgres
    environment:
      - CACHE_URL
      - DATABASE_URL
      - DJANGO_ADMINS
      - DJANGO_ALLOWED_HOSTS
      - DJANGO_CONFIGURATION
      - DJANGO_DEBUG
      - DJANGO_DEFAULT_FROM_EMAIL
      - DJANGO_SECRET_KEY
      - DJANGO_SERVER_EMAIL
      - DJANGO_SESSION_COOKIE_DOMAIN
      - DJANGO_SUPERUSER_EMAIL
      - DJANGO_SUPERUSER_PASSWORD
      - DJANGO_SUPERUSER_USERNAME
      - EMAIL_URL
      - PYTHONBREAKPOINT
    user: ${USER:-appuser}
    volumes:
      - ./{{ cookiecutter.backend_service_slug }}:/app{% endif %}
{% if cookiecutter.frontend_type != "none" %}
  {{ cookiecutter.frontend_service_slug }}:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{ cookiecutter.frontend_service_slug }}-ssl.entryPoints=port443"
      - "traefik.http.routers.{{ cookiecutter.frontend_service_slug }}-ssl.rule=Host(`${HOST:-localhost}`) && PathPrefix(`/`) || Host(`${HOST:-localhost}`) && PathPrefix(`/sockjs-node`)"
      - "traefik.http.routers.{{ cookiecutter.frontend_service_slug }}-ssl.tls=true"
      - "traefik.http.routers.{{ cookiecutter.frontend_service_slug }}-ssl.service={{ cookiecutter.frontend_service_slug }}-ssl"
      - "traefik.http.services.{{ cookiecutter.frontend_service_slug }}-ssl.loadBalancer.server.port=${FRONTEND_PORT:-3000}"
    build:
      context: ./{{ cookiecutter.frontend_service_slug }}
      dockerfile: docker/local.Dockerfile{% if cookiecutter.backend_type != "none" %}
    depends_on:
      - {{ cookiecutter.backend_service_slug }}{% endif %}
    environment:
      - INTERNAL_BACKEND_URL=${INTERNAL_BACKEND_URL:-http://{{ cookiecutter.backend_service_slug }}:{{ cookiecutter.backend_service_port }}{{ '}' }}
      - NEXT_PUBLIC_PROJECT_URL=${PROJECT_URL:-https://localhost}
      - REACT_ENVIRONMENT=${REACT_ENVIRONMENT:-Development}
    volumes:
      - ./{{ cookiecutter.frontend_service_slug }}:/app{% endif %}

  traefik:
    image: traefik:v2.6
    depends_on:{% if cookiecutter.backend_type != 'none' %}
      - {{ cookiecutter.backend_service_slug }}{% endif %}{% if cookiecutter.frontend_type != 'none' %}
      - {{ cookiecutter.frontend_service_slug }}{% endif %}{% endif %}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # - "--log.level=DEBUG"
      # - "--api=true"
      # - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.network=default"
      - "--entryPoints.port443.address=:443"
      - "--entryPoints.port80.address=:80"
      - "--entryPoints.port80.http.redirections.entrypoint.to=port443"
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"

  postgres:
    environment:
      - POSTGRES_DB={{ cookiecutter.project_slug }}
      - POSTGRES_INITDB_ARGS=--no-sync
      - POSTGRES_PASSWORD=postgres
    image: postgres:14-bullseye
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data: {}

