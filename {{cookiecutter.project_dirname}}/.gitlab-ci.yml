stages:
  - Core
  - Networking
  - Environment

image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest

variables:
  TF_VAR_digitalocean_token: "${DIGITALOCEAN_TOKEN}"
  TF_VAR_project_domain: "${DOMAIN}"

before_script:
  - cd ${TF_ROOT}

.init:
  script:
  - gitlab-terraform init
  only:
    - main

.validate:
  script:
    - gitlab-terraform validate
  only:
    - main

.plan:
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json
  only:
    - main

.apply:
  script:
    - gitlab-terraform apply
  only:
    - main

### CORE STACK ###{% for stack_slug in cookiecutter.stacks %}

# CORE STACK - {{ stack_slug|title }} #

.stack_{{ stack_slug }}_core:
  stage: Core
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/stack_{{ stack_slug }}_core
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/core
    TF_VAR_s3_bucket_access_id: "${S3_BUCKET_ACCESS_ID}"
    TF_VAR_s3_bucket_region: "${DIGITALOCEAN_BUCKET_REGION}"
    TF_VAR_s3_bucket_secret_key: "${S3_BUCKET_SECRET_KEY}"
    TF_VAR_stack_slug: {{ stack_slug }}
  cache:
    key: {{ cookiecutter.project_slug }}-stack-{{ stack_slug }}-core
    paths:
      - ${TF_ROOT}/.terraform

stack_{{ stack_slug }}_core_init:
  extends:
    - .init
    - .stack_{{ stack_slug }}_core

stack_{{ stack_slug }}_core_validate:
  extends:
    - .validate
    - .stack_{{ stack_slug }}_core
  needs: ["stack_{{ stack_slug }}_core_init"]

stack_{{ stack_slug }}_core_plan:
  extends:
    - .plan
    - .stack_{{ stack_slug }}_core
  needs: ["stack_{{ stack_slug }}_core_validate"]

stack_{{ stack_slug }}_core_apply:
  extends:
    - .apply
    - .stack_{{ stack_slug }}_core
  needs: ["stack_{{ stack_slug }}_core_plan"]{% endfor %}
  when: manual

### NETWORKING STACK ###{% for stack_slug, stack_envs in cookiecutter.stacks.items() %}

# NETWORKING STACK - {{ stack_slug|title }} #

.stack_{{ stack_slug }}_networking:
  stage: Networking
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/stack_{{ stack_slug }}_networking
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/networking
    TF_VAR_stack_slug: {{ stack_slug }}
  cache:
    key: {{ cookiecutter.project_slug }}-stack-{{ stack_slug }}-networking
    paths:
      - ${TF_ROOT}/.terraform

stack_{{ stack_slug }}_networking_init:
  extends:
    - .init
    - .stack_{{ stack_slug }}_networking

stack_{{ stack_slug }}_networking_validate:
  extends:
    - .validate
    - .stack_{{ stack_slug }}_networking
  needs: ["stack_{{ stack_slug }}_networking_init"]

stack_{{ stack_slug }}_networking_plan:
  extends:
    - .plan
    - .stack_{{ stack_slug }}_networking
  needs: ["stack_{{ stack_slug }}_core_apply", "stack_{{ stack_slug }}_networking_validate"]

stack_{{ stack_slug }}_networking_apply:
  extends:
    - .apply
    - .stack_{{ stack_slug }}_networking
  needs: ["stack_{{ stack_slug }}_networking_plan"]{% endfor %}

### ENVIRONMENT STACK ###{% for stack_slug, stack_envs in cookiecutter.stacks.items() %}{% for  env_slug, env_conf in stack_envs.items() %}

# ENVIRONMENT STACK - {{ env_conf.name }} #

.env_{{ env_slug }}:
  stage: Environment
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/env_{{ env_slug }}
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/environment
    TF_VAR_domain_prefix: {{ env_conf.prefix }}
    TF_VAR_env_slug: {{ env_slug }}
    TF_VAR_project_url: {{ env_conf.url }}
    TF_VAR_registry_password: "${K8S_REGCRED}"
    TF_VAR_stack_slug: {{ stack_slug }}
  cache:
    key: {{ cookiecutter.project_slug }}-env-{{ env_slug }}
    paths:
      - ${TF_ROOT}/.terraform

env_{{ env_slug }}_init:
  extends:
    - .init
    - .env_{{ env_slug }}

env_{{ env_slug }}_validate:
  extends:
    - .validate
    - .env_{{ env_slug }}
  needs: ["env_{{ env_slug }}_init"]

env_{{ env_slug }}_plan:
  extends:
    - .plan
    - .env_{{ env_slug }}
  needs: ["stack_{{ stack_slug }}_networking_apply", "env_{{ env_slug }}_validate"]

env_{{ env_slug }}_apply:
  extends:
    - .apply
    - .env_{{ env_slug }}
  needs: ["env_{{ env_slug }}_plan"]{% endfor %}{% endfor %}
