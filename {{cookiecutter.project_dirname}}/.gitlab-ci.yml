workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE != "web" && $CI_COMMIT_BRANCH != "main"
      when: never
    - if: $ENABLED_ALL
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*{% if cookiecutter.deployment_type == "digitalocean-k8s" %}(?:base|cluster){% else %}cluster{% endif %}\s*(?:,|$)/i && $ENABLED_STACKS
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*environment\s*(?:,|$)/i && $ENABLED_ENVS
      when: always

stages:{% if cookiecutter.deployment_type == "digitalocean-k8s" %}
  - Base{% endif %}
  - Cluster
  - Environment

image:
  name: docker:20

services:
  - docker:20-dind

.terraform:
  script:
    - >
      docker run --rm
      -u `id -u`
      -v ${PWD}:${PWD}
      -w ${PWD}{% if cookiecutter.terraform_backend == "gitlab" %}
      -e CI_API_V4_URL
      -e CI_COMMIT_SHA
      -e CI_JOB_ID{% if cookiecutter.use_vault == "true" %}
      -e CI_JOB_JWT_V2{% endif %}
      -e CI_JOB_STAGE
      -e CI_JOB_TOKEN
      -e CI_PROJECT_ID
      -e CI_PROJECT_NAME
      -e CI_PROJECT_NAMESPACE
      -e CI_PROJECT_PATH
      -e CI_PROJECT_URL{% elif cookiecutter.use_vault == "true" %}
      -e CI_JOB_JWT_V2{% endif %}
      -e ENV_SLUG
      -e PROJECT_DIR=${CI_PROJECT_DIR}
      -e PROJECT_SLUG={{ cookiecutter.project_slug }}
      -e STACK_SLUG
      -e TERRAFORM_BACKEND={{ cookiecutter.terraform_backend }}
      -e TERRAFORM_EXTRA_VAR_FILE
      -e TERRAFORM_VARS_DIR
      -e TF_ROOT{% if cookiecutter.terraform_backend == "gitlab" %}
      -e TF_STATE_NAME{% endif %}{% if cookiecutter.use_vault == "false" %}{% if cookiecutter.deployment_type == "digitalocean-k8s" %}
      -e TF_VAR_digitalocean_token="${DIGITALOCEAN_TOKEN}"{% elif cookiecutter.deployment_type == "other-k8s" %}
      -e TF_VAR_kubernetes_cluster_ca_certificate="${KUBERNETES_CLUSTER_CA_CERTIFICATE}"
      -e TF_VAR_kubernetes_host="${KUBERNETES_HOST}"
      -e TF_VAR_kubernetes_token="${KUBERNETES_TOKEN}"{% endif %}{% if "s3" in cookiecutter.media_storage %}
      -e TF_VAR_s3_access_id="${S3_ACCESS_ID}"
      -e TF_VAR_s3_bucket_name="${S3_BUCKET_NAME}"
      -e TF_VAR_s3_host="${S3_HOST}"
      -e TF_VAR_s3_region="${S3_REGION}"
      -e TF_VAR_s3_secret_key="${S3_SECRET_KEY}"{% endif %}
      -e TF_VAR_basic_auth_password="${BASIC_AUTH_PASSWORD}"
      -e TF_VAR_basic_auth_username="${BASIC_AUTH_USERNAME}"
      -e TF_VAR_grafana_password="${GRAFANA_PASSWORD}"
      -e TF_VAR_registry_password="${REGISTRY_PASSWORD}"
      -e TF_VAR_registry_username="${REGISTRY_USERNAME}"
      -e TF_VAR_tls_certificate_crt="${TLS_CERTIFICATE_CRT}"
      -e TF_VAR_tls_certificate_key="${TLS_CERTIFICATE_KEY}"{% endif %}{% if cookiecutter.terraform_backend != "gitlab" %}
      -e TF_WORKSPACE{% endif %}{% if cookiecutter.terraform_backend == "terraform-cloud" and cookiecutter.use_vault == "false" %}
      -e TFC_TOKEN{% endif %}{% if cookiecutter.use_vault == "true" %}
      -e VAULT_ADDR
      -e VAULT_ROLE
      -e VAULT_SECRETS
      -e VAULT_SECRETS_PREFIX
      -e VAULT_VERSION{% endif %}
      registry.gitlab.com/gitlab-org/terraform-images/stable:latest sh -c "${TERRAFORM_CMD}"

.init:
  extends:
    - .terraform
  variables:
    TERRAFORM_CMD: ${CI_PROJECT_DIR}/scripts/deploy.sh init

.validate:
  extends:
    - .terraform
  variables:
    TERRAFORM_CMD: ${CI_PROJECT_DIR}/scripts/deploy.sh validate

.plan:
  extends:
    - .terraform
  variables:
    TERRAFORM_CMD: ${CI_PROJECT_DIR}/scripts/deploy.sh plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

.apply:
  extends:
    - .terraform
  variables:
    TERRAFORM_CMD: ${CI_PROJECT_DIR}/scripts/deploy.sh apply -auto-approve

{% if cookiecutter.deployment_type == "digitalocean-k8s" %}### BASE STAGE ###

.base_stage:
  stage: Base
  variables:
    TERRAFORM_VARS_DIR: ${CI_PROJECT_DIR}/terraform/base/vars{% if cookiecutter.use_vault == "true" %}
    VAULT_ROLE: orchestrator-stacks
    VAULT_SECRETS: "digitalocean s3"
    VAULT_SECRETS_PREFIX: "stacks/${CI_ENVIRONMENT_NAME}"{% endif %}{% for stack in cookiecutter.resources.stacks %}

# {{ stack.slug|title }} Stack (Base Stage) #

.stack_{{ stack.slug }}_base:
  extends:
    - .base_stage
  variables:
    STACK_SLUG: {{ stack.slug }}
    TERRAFORM_EXTRA_VAR_FILE: {{ stack.slug }}.tfvars
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/base/{{ cookiecutter.deployment_type }}{% if cookiecutter.terraform_backend == "gitlab" %}
    TF_STATE_NAME: stack_{{ stack.slug }}_base{% else %}
    TF_WORKSPACE: {{ cookiecutter.project_slug }}_{{ cookiecutter.service_slug }}_base_{{ stack.slug }}{% endif %}
  cache:
    key: {{ cookiecutter.project_slug }}-stack-{{ stack.slug }}-base
    paths:
      - ${TF_ROOT}/.terraform
  environment:
    name: {{ stack.name }}
  rules:
    - if: $ENABLED_ALL == "true"
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*base\s*(?:,|$)/i && $ENABLED_STACKS =~ /(?:^|,)\s*{{ stack.slug }}\s*(?:,|$)/i
      when: always
    - when: never

stack_{{ stack.slug }}_base_init:
  extends:
    - .init
    - .stack_{{ stack.slug }}_base

stack_{{ stack.slug }}_base_validate:
  extends:
    - .validate
    - .stack_{{ stack.slug }}_base
  needs: ["stack_{{ stack.slug }}_base_init"]

stack_{{ stack.slug }}_base_plan:
  extends:
    - .plan
    - .stack_{{ stack.slug }}_base
  needs: ["stack_{{ stack.slug }}_base_validate"]

stack_{{ stack.slug }}_base_apply:
  extends:
    - .apply
    - .stack_{{ stack.slug }}_base
  needs: ["stack_{{ stack.slug }}_base_plan"]{% endfor %}

{% endif %}### CLUSTER STAGE ###

.cluster_stage:
  stage: Cluster
  variables:
    TERRAFORM_VARS_DIR: ${CI_PROJECT_DIR}/terraform/cluster/vars{% if cookiecutter.use_vault == "true" %}
    VAULT_ROLE: orchestrator-stacks
    VAULT_SECRETS: "digitalocean k8s"
    VAULT_SECRETS_PREFIX: "stacks/${CI_ENVIRONMENT_NAME}"{% endif %}{% for stack in cookiecutter.resources.stacks %}

# {{ stack.slug|title }} Stack (Cluster Stage) #

.stack_{{ stack.slug }}_cluster:
  extends:
    - .cluster_stage
  variables:
    STACK_SLUG: {{ stack.slug }}
    TERRAFORM_EXTRA_VAR_FILE: {{ stack.slug }}.tfvars
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/cluster/{{ cookiecutter.deployment_type }}{% if cookiecutter.terraform_backend == "gitlab" %}
    TF_STATE_NAME: stack_{{ stack.slug }}_cluster{% else %}
    TF_WORKSPACE: {{ cookiecutter.project_slug }}_{{ cookiecutter.service_slug }}_cluster_{{ stack.slug }}{% endif %}
  cache:
    key: {{ cookiecutter.project_slug }}-stack-{{ stack.slug }}-cluster
    paths:
      - ${TF_ROOT}/.terraform
  environment:
    name: {{ stack.name }}
  rules:
    - if: $ENABLED_ALL == "true"
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*cluster\s*(?:,|$)/i && $ENABLED_STACKS =~ /(?:^|,)\s*{{ stack.slug }}\s*(?:,|$)/i
      when: always
    - when: never

stack_{{ stack.slug }}_cluster_init:
  extends:
    - .init
    - .stack_{{ stack.slug }}_cluster

stack_{{ stack.slug }}_cluster_validate:
  extends:
    - .validate
    - .stack_{{ stack.slug }}_cluster
  needs: ["stack_{{ stack.slug }}_cluster_init"]

stack_{{ stack.slug }}_cluster_plan:
  extends:
    - .plan
    - .stack_{{ stack.slug }}_cluster
  needs:{% if cookiecutter.deployment_type == "digitalocean-k8s" %}
    - job: stack_{{ stack.slug }}_base_apply
      optional: true{% endif %}
    - job: stack_{{ stack.slug }}_cluster_validate

stack_{{ stack.slug }}_cluster_apply:
  extends:
    - .apply
    - .stack_{{ stack.slug }}_cluster
  needs: ["stack_{{ stack.slug }}_cluster_plan"]{% endfor %}

### ENVIRONMENT STAGE ###

.environment_stage:
  stage: Environment
  variables:
    TERRAFORM_VARS_DIR: ${CI_PROJECT_DIR}/terraform/environment/vars
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/environment/{{ cookiecutter.deployment_type }}{% if cookiecutter.use_vault == "true" %}
    VAULT_ROLE: orchestrator-envs
    VAULT_SECRETS: "digitalocean k8s orchestrator/basic_auth orchestrator/regcred orchestrator/tls monitoring s3"
    VAULT_SECRETS_PREFIX: "envs/${CI_ENVIRONMENT_NAME}"{% endif %}{% for env in cookiecutter.resources.envs %}

# {{ env.name|title }} Environment #

.env_{{ env.slug }}:
  extends:
    - .environment_stage
  variables:
    ENV_SLUG: {{ env.slug }}
    STACK_SLUG: {{ env.stack_slug }}
    TERRAFORM_EXTRA_VAR_FILE: {{ env.slug }}.tfvars{% if cookiecutter.terraform_backend == "gitlab" %}
    TF_STATE_NAME: env_{{ env.slug }}{% else %}
    TF_WORKSPACE: {{ cookiecutter.project_slug }}_{{ cookiecutter.service_slug }}_environment_{{ env.slug }}{% endif %}
  cache:
    key: {{ cookiecutter.project_slug }}-env-{{ env.slug }}
    paths:
      - ${TF_ROOT}/.terraform
  environment:
    name: {{ env.name }}
    url: {{ env.url }}
  rules:
    - if: $ENABLED_ALL == "true"
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*environment\s*(?:,|$)/i && $ENABLED_ENVS =~ /(?:^|,)\s*{{ env.slug }}\s*(?:,|$)/i
      when: always
    - when: never

env_{{ env.slug }}_init:
  extends:
    - .init
    - .env_{{ env.slug }}

env_{{ env.slug }}_validate:
  extends:
    - .validate
    - .env_{{ env.slug }}
  needs: ["env_{{ env.slug }}_init"]

env_{{ env.slug }}_plan:
  extends:
    - .plan
    - .env_{{ env.slug }}
  needs:
    - job: stack_{{ env.stack_slug }}_cluster_apply
      optional: true
    - job: env_{{ env.slug }}_validate

env_{{ env.slug }}_apply:
  extends:
    - .apply
    - .env_{{ env.slug }}
  needs: ["env_{{ env.slug }}_plan"]{% endfor %}
