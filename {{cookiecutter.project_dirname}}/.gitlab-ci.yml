workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE != "web" && $CI_COMMIT_BRANCH != "main"
      when: never
    - if: $ENABLED_ALL
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*(?:core|networking)\s*(?:,|$)/i && $ENABLED_STACKS
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*environment\s*(?:,|$)/i && $ENABLED_ENVS
      when: always

stages:
  - Core
  - Networking
  - Environment

image: {{ {"terraform-cloud": "hashicorp/terraform"}.get(cookiecutter.terraform_backend, "registry.gitlab.com/gitlab-org/terraform-images/stable") }}:latest

variables:
  TERRAFORM_CMD: {{ {"terraform-cloud": "terraform"}.get(cookiecutter.terraform_backend, "gitlab-terraform") }}
  TF_IN_AUTOMATION: 1
  TF_VAR_digitalocean_token: "${DIGITALOCEAN_TOKEN}"
  TF_VAR_project_domain: "${DOMAIN}"

before_script:
  - cd ${TF_ROOT}{% if cookiecutter.terraform_backend == "terraform-cloud" %}
  - export TF_WORKSPACE=vection-frames-${ENVIRONMENT_SLUG}
  - |
    cat > ${TF_CLI_CONFIG_FILE} <<EOF
    {
      "credentials": {"app.terraform.io": {
          "token": "${TFC_TOKEN}"
        }
      }
    }
    EOF{% endif %}

.init:
  script:
  - ${TERRAFORM_CMD} init

.validate:
  script:
    - ${TERRAFORM_CMD} validate

.plan:
  script:
    - ${TERRAFORM_CMD} plan
    - ${TERRAFORM_CMD} plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

.apply:
  script:
    -  ${TERRAFORM_CMD} apply -auto-approve

### CORE STACK ###{% for stack_slug in cookiecutter.stacks %}

# CORE STACK - {{ stack_slug|title }} #

.stack_{{ stack_slug }}_core:
  stage: Core
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/stack_{{ stack_slug }}_core
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/core{% if cookiecutter.deployment_type == "k8s-digitalocean" %}
    TF_VAR_database_cluster_node_size: "${DIGITALOCEAN_DATABASE_CLUSTER_NODE_SIZE}"
    TF_VAR_database_cluster_region: "${DIGITALOCEAN_DATABASE_CLUSTER_REGION}"
    TF_VAR_redis_cluster_node_size: "${DIGITALOCEAN_REDIS_CLUSTER_NODE_SIZE}"
    TF_VAR_redis_cluster_region: "${DIGITALOCEAN_REDIS_CLUSTER_REGION}"
    TF_VAR_k8s_cluster_region: "${DIGITALOCEAN_K8S_CLUSTER_REGION}"{% endif %}
    TF_VAR_s3_bucket_access_id: "${S3_BUCKET_ACCESS_ID}"{% if cookiecutter.media_storage == "s3-digitalocean" %}
    TF_VAR_s3_bucket_region: "${DIGITALOCEAN_BUCKET_REGION}"{% endif %}
    TF_VAR_s3_bucket_secret_key: "${S3_BUCKET_SECRET_KEY}"
    TF_VAR_stack_slug: {{ stack_slug }}
    TF_VAR_use_redis: "${USE_REDIS}"
  cache:
    key: {{ cookiecutter.project_slug }}-stack-{{ stack_slug }}-core
    paths:
      - ${TF_ROOT}/.terraform
  rules:
    - if: $ENABLED_ALL == "true"
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*core\s*(?:,|$)/i && $ENABLED_STACKS =~ /(?:^|,)\s*{{ stack_slug }}\s*(?:,|$)/i
      when: always
    - when: never

stack_{{ stack_slug }}_core_init:
  extends:
    - .init
    - .stack_{{ stack_slug }}_core

stack_{{ stack_slug }}_core_validate:
  extends:
    - .validate
    - .stack_{{ stack_slug }}_core
  needs: ["stack_{{ stack_slug }}_core_init"]

stack_{{ stack_slug }}_core_plan:
  extends:
    - .plan
    - .stack_{{ stack_slug }}_core
  needs: ["stack_{{ stack_slug }}_core_validate"]

stack_{{ stack_slug }}_core_apply:
  extends:
    - .apply
    - .stack_{{ stack_slug }}_core
  needs: ["stack_{{ stack_slug }}_core_plan"]{% endfor %}

### NETWORKING STACK ###{% for stack_slug, stack_envs in cookiecutter.stacks.items() %}

# NETWORKING STACK - {{ stack_slug|title }} #

.stack_{{ stack_slug }}_networking:
  stage: Networking
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/stack_{{ stack_slug }}_networking
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/networking
    TF_VAR_grafana_password: "${GRAFANA_PASSWORD}"
    TF_VAR_stack_slug: {{ stack_slug }}
    TF_VAR_use_monitoring: "${USE_MONITORING}"
  cache:
    key: {{ cookiecutter.project_slug }}-stack-{{ stack_slug }}-networking
    paths:
      - ${TF_ROOT}/.terraform
  rules:
    - if: $ENABLED_ALL == "true"
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*networking\s*(?:,|$)/i && $ENABLED_STACKS =~ /(?:^|,)\s*{{ stack_slug }}\s*(?:,|$)/i
      when: always
    - when: never

stack_{{ stack_slug }}_networking_init:
  extends:
    - .init
    - .stack_{{ stack_slug }}_networking

stack_{{ stack_slug }}_networking_validate:
  extends:
    - .validate
    - .stack_{{ stack_slug }}_networking
  needs: ["stack_{{ stack_slug }}_networking_init"]

stack_{{ stack_slug }}_networking_plan:
  extends:
    - .plan
    - .stack_{{ stack_slug }}_networking
  needs:
    - job: stack_{{ stack_slug }}_core_apply
      optional: true
    - job: stack_{{ stack_slug }}_networking_validate

stack_{{ stack_slug }}_networking_apply:
  extends:
    - .apply
    - .stack_{{ stack_slug }}_networking
  needs: ["stack_{{ stack_slug }}_networking_plan"]{% endfor %}

### ENVIRONMENT STACK ###{% for stack_slug, stack_envs in cookiecutter.stacks.items() %}

.{{ stack_slug }}_env:
  stage: Environment
  variables:
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/environment
    TF_VAR_backend_service_port: "${BACKEND_SERVICE_PORT}"
    TF_VAR_backend_service_slug: "${BACKEND_SERVICE_SLUG}"
    TF_VAR_basic_auth_enabled: "${BASIC_AUTH_ENABLED}"
    TF_VAR_basic_auth_password: "${BASIC_AUTH_PASSWORD}"
    TF_VAR_basic_auth_username: "${BASIC_AUTH_USERNAME}"
    TF_VAR_frontend_service_port: "${FRONTEND_SERVICE_PORT}"
    TF_VAR_frontend_service_slug: "${FRONTEND_SERVICE_SLUG}"
    TF_VAR_registry_password: "${K8S_REGCRED}"{% if cookiecutter.media_storage == "s3-digitalocean" %}
    TF_VAR_s3_bucket_region: "${DIGITALOCEAN_BUCKET_REGION}"{% endif %}
    TF_VAR_stack_slug: {{ stack_slug }}
    TF_VAR_use_redis: "${USE_REDIS}"{% for  env_slug, env_conf in stack_envs.items() %}

# ENVIRONMENT STACK - {{ env_conf.name }} #

.env_{{ env_slug }}:
  extends:
    - .{{ stack_slug }}_env
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/env_{{ env_slug }}{% if env_conf.prefix %}
    TF_VAR_domain_prefix: {{ env_conf.prefix }}{% endif %}
    TF_VAR_env_slug: {{ env_slug }}
    TF_VAR_project_url: {{ env_conf.url }}
  cache:
    key: {{ cookiecutter.project_slug }}-env-{{ env_slug }}
    paths:
      - ${TF_ROOT}/.terraform
  rules:
    - if: $ENABLED_ALL == "true"
      when: always
    - if: $ENABLED_STAGES =~ /(?:^|,)\s*environment\s*(?:,|$)/i && $ENABLED_ENVS =~ /(?:^|,)\s*{{ env_slug }}\s*(?:,|$)/i
      when: always
    - when: never

env_{{ env_slug }}_init:
  extends:
    - .init
    - .env_{{ env_slug }}

env_{{ env_slug }}_validate:
  extends:
    - .validate
    - .env_{{ env_slug }}
  needs: ["env_{{ env_slug }}_init"]

env_{{ env_slug }}_plan:
  extends:
    - .plan
    - .env_{{ env_slug }}
  needs:
    - job: stack_{{ stack_slug }}_networking_apply
      optional: true
    - job: env_{{ env_slug }}_validate

env_{{ env_slug }}_apply:
  extends:
    - .apply
    - .env_{{ env_slug }}
  needs: ["env_{{ env_slug }}_plan"]{% endfor %}{% endfor %}
