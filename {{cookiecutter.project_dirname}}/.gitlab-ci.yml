stages:
  - Prepare
  - Validate
  - Build
  - Deploy

# {"dev":{"stack":"main","slug":"dev","name":"Development"},"stage":{"stack":"stage","slug":"stage","name":"Staging"},"prod":{"stack":"dev","slug":"prod","name":"Production"}}
image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest

variables:
  TF_VAR_domain: ${DOMAIN}
  TF_VAR_environment: ${CI_ENVIRONMENT_NAME}
  TF_VAR_project_name: {{ cookiecutter.project_name }}
  TF_VAR_project_slug: {{ cookiecutter.project_slug }}

cache:
  key: {{ cookiecutter.project_slug }}-${CI_ENVIRONMENT_SLUG}
  paths:
    - ${TF_ROOT}/.terraform

before_script:
  - cd ${TF_ROOT}
{% for stack_slug in cookiecutter.environments.values()|map(attribute="stack")|unique %}
init_{{ stack_slug }}_core:
  stage: Prepare
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ stack_slug }}_core
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/core
    TF_VAR_stack_slug: {{ stack_slug }}
  script:
    - gitlab-terraform init

validate_{{ stack_slug }}_core:
  depends_on: init_{{ stack_slug }}_core
  stage: Validate
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ stack_slug }}_core
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/core
    TF_VAR_stack_slug: {{ stack_slug }}
  script:
    - gitlab-terraform validate

plan_{{ stack_slug }}_core:
  depends_on: validate_{{ stack_slug }}_core
  stage: Build
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ stack_slug }}_core
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/core
    TF_VAR_stack_slug: {{ stack_slug }}
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

apply_{{ stack_slug }}_core:
  depends_on: plan_{{ stack_slug }}_core
  stage: Deploy
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ stack_slug }}_core
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/core
    TF_VAR_stack_slug: {{ stack_slug }}
  script:
    - gitlab-terraform apply
  when: manual{% endfor %}
{% for stack_slug in cookiecutter.environments.values()|map(attribute="stack")|unique %}
init_{{ stack_slug }}_networking:
  stage: Prepare
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ stack_slug }}_networking
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/networking
    TF_VAR_stack_slug: {{ stack_slug }}
  script:
    - gitlab-terraform init

validate_{{ stack_slug }}_networking:
  depends_on: init_{{ stack_slug }}_networking
  stage: Validate
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ stack_slug }}_networking
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/networking
    TF_VAR_stack_slug: {{ stack_slug }}
  script:
    - gitlab-terraform validate

plan_{{ stack_slug }}_networking:
  depends_on: validate_{{ stack_slug }}_networking
  stage: Build
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ stack_slug }}_networking
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/networking
    TF_VAR_stack_slug: {{ stack_slug }}
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

apply_{{ stack_slug }}_networking:
  depends_on: plan_{{ stack_slug }}_networking
  stage: Deploy
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ stack_slug }}_networking
    TF_ROOT: ${CI_PROJECT_DIR}/terraform/networking
    TF_VAR_stack_slug: {{ stack_slug }}
  script:
    - gitlab-terraform apply
  when: manual{% endfor %}

.environment:
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/{{ cookiecutter.project_slug }}-${CI_ENVIRONMENT_NAME}
    TF_ROOT: ${CI_PROJECT_DIR}/terraform

.development:
  extends:
    - .environment
  variables:
    TF_domain: dev.{{ cookiecutter.project_slug }}.com
  environment:
    name: Development
    url: https://dev.{{ cookiecutter.project_slug }}.com
  only:
    - develop

.integration:
  extends:
    - .environment
  variables:
    TF_domain: test.{{ cookiecutter.project_slug }}.com
  environment:
    name: Integration
    url: https://test.{{ cookiecutter.project_slug }}.com
  only:
    - master

.production:
  extends:
    - .environment
  variables:
    TF_domain: www.{{ cookiecutter.project_slug }}.com
  environment:
    name: Production
    url: https://www.{{ cookiecutter.project_slug }}.com
  only:
    - tags

.validate:
  stage: Validate
  script:
    - gitlab-terraform validate

validate_development:
  extends:
    - .development
    - .validate

validate_integration:
  extends:
    - .integration
    - .validate

validate_production:
  extends:
    - .production
    - .validate

.plan:
  stage: Build
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

plan_development:
  extends:
    - .development
    - .plan

plan_integration:
  extends:
    - .integration
    - .plan

plan_production:
  extends:
    - .production
    - .plan

.apply:
  stage: Deploy
  script:
    - apk add aws-cli
    - gitlab-terraform apply
  when: manual

apply_development:
  extends:
    - .development
    - .apply
  dependencies:
    - plan_development

apply_integration:
  extends:
    - .integration
    - .apply
  dependencies:
    - plan_integration

apply_production:
  extends:
    - .production
    - .apply
  dependencies:
    - plan_production
